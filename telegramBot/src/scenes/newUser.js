// new
const WizardScene = require('telegraf/scenes/wizard');
const Composer = require('telegraf/composer');
const session = require('telegraf/session');
const Stage = require('telegraf/stage');
const Markup = require('telegraf/markup');
const {
  events: {
    SCENES: { NEW_USER: name },
  },
} = require('../config');
const { mainMenu, startRegistration } = require('../menu');

const stepHandler = new Composer();
stepHandler.action('contact', ctx => {
  ctx.reply(
    `–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç", —â–æ–±–∏ –º–∏ –º–æ–≥–ª–∏ –∑ –≤–∞–º–∏ –∑–≤'—è–∑–∞—Ç–∏—Å—å`,
    {
      reply_markup: {
        keyboard: [
          [{ text: 'üì± –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç', request_contact: true }],
          ['‚óÄÔ∏è –ù–∞–∑–∞–¥'],
        ],
        resize_keyboard: true,
        one_time_keyboard: true,
      },
    }
  );
  return ctx.wizard.next();
});

const scene = new WizardScene(
  name,
  async ctx => {
    try {
      await ctx.reply(
        `–ù–∞—Ç–∏—Å–Ω—ñ—Ç—å –∫–Ω–æ–ø–∫—É "–í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç", —â–æ–±–∏ –º–∏ –º–æ–≥–ª–∏ –∑ –≤–∞–º–∏ –∑–≤'—è–∑–∞—Ç–∏—Å—å`,
        {
          reply_markup: {
            keyboard: [
              [{ text: 'üì± –í—ñ–¥–ø—Ä–∞–≤–∏—Ç–∏ –∫–æ–Ω—Ç–∞–∫—Ç', request_contact: true }],
              ['‚óÄÔ∏è –ù–∞–∑–∞–¥'],
            ],
            resize_keyboard: true,
            one_time_keyboard: true,
          },
        }
      );
      console.log(contact);
      console.log(ctx.message.contact.phone_number);
      stepHandler,
      ctx => {
        ctx.reply('–í—ñ—Ç–∞—é! –¢–µ–ø–µ—Ä –í–∏ –∑–∞—Ä–µ—î—Å—Ç—Ä–æ–≤–∞–Ω–∏–π –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á BloodExchangeBot!', mainMenu);
        return ctx.scene.leave();
      }
    } catch (error) {
      ctx.reply('An error was occured(\nPlease try again later!', startRegistration);
    }
    return ctx.scene.leave();
  },
);

module.exports = {
  name,
  scene,
};

